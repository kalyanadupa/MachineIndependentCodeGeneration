Nonterminals useless in grammar

   constant_expression
   designation
   designator_list
   designator
   M2


Terminals unused in grammar

   AUTO
   BREAK
   CASE
   CONTINUE
   DEFAULT
   ENUM
   EXTERN
   FLOAT
   GOTO
   INLINE
   LONG
   REGISTER
   RESTRICT
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   TYPEDEF
   UNION
   UNSIGNED
   VOLATILE
   BOOL
   COMPLEX
   IMAGINARY
   ENUMERATION_CONSTANT


Rules useless in grammar

  145 constant_expression: conditional_expression

  146 designation: designator_list '='

  147 designator_list: designator
  148                | designator_list designator

  149 designator: '[' constant_expression ']'
  150           | '.' id_var

  151 M2: /* empty */


Rules useless in parser due to conflicts

  100 parameter_type_list: /* empty */

  123 expression_opt: /* empty */

  144 N1: /* empty */


State 25 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 171 conflicts: 1 shift/reduce
State 211 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 231 conflicts: 1 reduce/reduce
State 236 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: id_var
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | '(' expression ')'

    5 CONSTANT: INTEGER_CONSTANT
    6         | CHARACTER_CONSTANT
    7         | FLOATING_CONSTANT

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' ')'
   11                   | postfix_expression '(' argument_expression_list ')'
   12                   | postfix_expression '.' id_var
   13                   | postfix_expression PTR_OP id_var
   14                   | postfix_expression INC_OP
   15                   | postfix_expression DEC_OP

   16 argument_expression_list: assignment_expression
   17                         | argument_expression_list ',' assignment_expression

   18 unary_expression: postfix_expression
   19                 | INC_OP unary_expression
   20                 | DEC_OP unary_expression
   21                 | unary_operator cast_expression

   22 unary_operator: '&'
   23               | '*'
   24               | '+'
   25               | '-'
   26               | '~'
   27               | '!'

   28 cast_expression: unary_expression
   29                | '(' type_name ')' cast_expression

   30 multiplicative_expression: cast_expression
   31                          | multiplicative_expression '*' cast_expression
   32                          | multiplicative_expression '/' cast_expression
   33                          | multiplicative_expression '%' cast_expression

   34 additive_expression: multiplicative_expression
   35                    | additive_expression '+' multiplicative_expression
   36                    | additive_expression '-' multiplicative_expression

   37 shift_expression: additive_expression
   38                 | shift_expression LEFT_OP additive_expression
   39                 | shift_expression RIGHT_OP additive_expression

   40 relational_expression: shift_expression
   41                      | relational_expression '<' shift_expression
   42                      | relational_expression '>' shift_expression
   43                      | relational_expression LE_OP shift_expression
   44                      | relational_expression GE_OP shift_expression

   45 equality_expression: relational_expression
   46                    | equality_expression EQ_OP relational_expression
   47                    | equality_expression NE_OP relational_expression

   48 and_expression: equality_expression
   49               | and_expression '&' M1 equality_expression

   50 exclusive_or_expression: and_expression
   51                        | exclusive_or_expression '^' and_expression

   52 inclusive_or_expression: exclusive_or_expression
   53                        | inclusive_or_expression '|' exclusive_or_expression

   54 logical_and_expression: inclusive_or_expression
   55                       | logical_and_expression AND_OP inclusive_or_expression

   56 logical_or_expression: logical_and_expression
   57                      | logical_or_expression OR_OP logical_and_expression

   58 conditional_expression: logical_or_expression
   59                       | logical_or_expression '?' expression ':' conditional_expression

   60 assignment_expression: conditional_expression
   61                      | unary_expression assignment_operator assignment_expression

   62 assignment_operator: '='
   63                    | MUL_ASSIGN
   64                    | DIV_ASSIGN
   65                    | MOD_ASSIGN
   66                    | ADD_ASSIGN
   67                    | SUB_ASSIGN
   68                    | LEFT_ASSIGN
   69                    | RIGHT_ASSIGN
   70                    | AND_ASSIGN
   71                    | XOR_ASSIGN
   72                    | OR_ASSIGN

   73 expression: assignment_expression
   74           | expression ',' assignment_expression

   75 declaration: declaration_specifiers ';'
   76            | declaration_specifiers init_declarator_list ';'

   77 declaration_specifiers: type_specifier
   78                       | type_specifier declaration_specifiers

   79 init_declarator_list: init_declarator
   80                     | init_declarator_list ',' init_declarator

   81 init_declarator: declarator
   82                | declarator '=' initializer

   83 type_specifier: VOID
   84               | CHAR
   85               | INT
   86               | DOUBLE

   87 specifier_qualifier_list: type_specifier specifier_qualifier_list
   88                         | type_specifier

   89 declarator: pointer direct_declarator
   90           | direct_declarator

   91 direct_declarator: id_var
   92                  | '(' declarator ')'
   93                  | direct_declarator '[' assignment_expression ']'
   94                  | direct_declarator '[' ']'
   95                  | direct_declarator '(' parameter_type_list ')'
   96                  | direct_declarator '(' identifier_list ')'
   97                  | direct_declarator '(' ')'

   98 pointer: '*'
   99        | '*' pointer

  100 parameter_type_list: /* empty */
  101                    | parameter_list

  102 parameter_list: declaration_specifiers declarator
  103               | parameter_list ',' declaration_specifiers declarator

  104 identifier_list: id_var
  105                | identifier_list ',' id_var

  106 type_name: specifier_qualifier_list

  107 id_var: IDENTIFIER

  108 initializer: assignment_expression

  109 statement: compound_statement
  110          | expression_statement
  111          | selection_statement
  112          | iteration_statement
  113          | jump_statement

  114 compound_statement: '{' '}'
  115                   | '{' block_item_list '}'

  116 block_item_list: block_item
  117                | block_item_list block_item

  118 block_item: declaration
  119           | statement

  120 expression_statement: ';'
  121                     | expression_opt ';'

  122 expression_opt: expression
  123               | /* empty */

  124 selection_statement: IF '(' expression ')' M1 statement
  125                    | IF '(' expression ')' M1 statement N1 ELSE M1 statement
  126                    | SWITCH '(' expression ')' statement

  127 iteration_statement: WHILE '(' expression ')' statement
  128                    | DO statement WHILE '(' expression ')' ';'
  129                    | FOR '(' expression_statement expression_statement ')' statement
  130                    | FOR '(' expression_statement expression_statement expression ')' statement

  131 jump_statement: RETURN ';'
  132               | RETURN expression ';'

  133 translation_unit: external_declaration
  134                 | translation_unit external_declaration

  135 external_declaration: function_definition
  136                     | declaration

  137 function_definition: declaration_specifiers declarator declaration_list compound_statement
  138                    | declaration_specifiers declarator compound_statement
  139                    | declarator declaration_list compound_statement
  140                    | declarator compound_statement

  141 declaration_list: declaration
  142                 | declaration_list declaration

  143 M1: /* empty */

  144 N1: /* empty */


Terminals, with rules where they appear

$end (0) 0
'!' (33) 27
'%' (37) 33
'&' (38) 22 49
'(' (40) 4 10 11 29 92 95 96 97 124 125 126 127 128 129 130
')' (41) 4 10 11 29 92 95 96 97 124 125 126 127 128 129 130
'*' (42) 23 31 98 99
'+' (43) 24 35
',' (44) 17 74 80 103 105
'-' (45) 25 36
'.' (46) 12
'/' (47) 32
':' (58) 59
';' (59) 75 76 120 121 128 131 132
'<' (60) 41
'=' (61) 62 82
'>' (62) 42
'?' (63) 59
'[' (91) 9 93 94
']' (93) 9 93 94
'^' (94) 51
'{' (123) 114 115
'|' (124) 53
'}' (125) 114 115
'~' (126) 26
error (256)
AUTO (258)
BREAK (259)
CASE (260)
CHAR (261) 84
CONTINUE (262)
DEFAULT (263)
DO (264) 128
DOUBLE (265) 86
ELSE (266) 125
ENUM (267)
EXTERN (268)
FLOAT (269)
FOR (270) 129 130
GOTO (271)
IF (272) 124 125
INLINE (273)
INT (274) 85
LONG (275)
REGISTER (276)
RESTRICT (277)
RETURN (278) 131 132
SHORT (279)
SIGNED (280)
SIZEOF (281)
STATIC (282)
STRUCT (283)
SWITCH (284) 126
TYPEDEF (285)
UNION (286)
UNSIGNED (287)
VOID (288) 83
VOLATILE (289)
WHILE (290) 127 128
BOOL (291)
COMPLEX (292)
IMAGINARY (293)
IDENTIFIER (294) 107
INTEGER_CONSTANT (295) 5
FLOATING_CONSTANT (296) 7
CHARACTER_CONSTANT (297) 6
STRING_LITERAL (298) 3
INC_OP (299) 14 19
PTR_OP (300) 13
LEFT_OP (301) 38
RIGHT_OP (302) 39
LE_OP (303) 43
GE_OP (304) 44
MUL_ASSIGN (305) 63
DIV_ASSIGN (306) 64
MOD_ASSIGN (307) 65
ADD_ASSIGN (308) 66
SUB_ASSIGN (309) 67
LEFT_ASSIGN (310) 68
DEC_OP (311) 15 20
EQ_OP (312) 46
RIGHT_ASSIGN (313) 69
NE_OP (314) 47
AND_ASSIGN (315) 70
XOR_ASSIGN (316) 71
AND_OP (317) 55
OR_OP (318) 57
OR_ASSIGN (319) 72
ENUMERATION_CONSTANT (320)


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
primary_expression (91)
    on left: 1 2 3 4, on right: 8
CONSTANT (92)
    on left: 5 6 7, on right: 2
postfix_expression (93)
    on left: 8 9 10 11 12 13 14 15, on right: 9 10 11 12 13 14 15 18
argument_expression_list (94)
    on left: 16 17, on right: 11 17
unary_expression (95)
    on left: 18 19 20 21, on right: 19 20 28 61
unary_operator (96)
    on left: 22 23 24 25 26 27, on right: 21
cast_expression (97)
    on left: 28 29, on right: 21 29 30 31 32 33
multiplicative_expression (98)
    on left: 30 31 32 33, on right: 31 32 33 34 35 36
additive_expression (99)
    on left: 34 35 36, on right: 35 36 37 38 39
shift_expression (100)
    on left: 37 38 39, on right: 38 39 40 41 42 43 44
relational_expression (101)
    on left: 40 41 42 43 44, on right: 41 42 43 44 45 46 47
equality_expression (102)
    on left: 45 46 47, on right: 46 47 48 49
and_expression (103)
    on left: 48 49, on right: 49 50 51
exclusive_or_expression (104)
    on left: 50 51, on right: 51 52 53
inclusive_or_expression (105)
    on left: 52 53, on right: 53 54 55
logical_and_expression (106)
    on left: 54 55, on right: 55 56 57
logical_or_expression (107)
    on left: 56 57, on right: 57 58 59
conditional_expression (108)
    on left: 58 59, on right: 59 60
assignment_expression (109)
    on left: 60 61, on right: 16 17 61 73 74 93 108
assignment_operator (110)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 61
expression (111)
    on left: 73 74, on right: 4 9 59 74 122 124 125 126 127 128 130
    132
declaration (112)
    on left: 75 76, on right: 118 136 141 142
declaration_specifiers (113)
    on left: 77 78, on right: 75 76 78 102 103 137 138
init_declarator_list (114)
    on left: 79 80, on right: 76 80
init_declarator (115)
    on left: 81 82, on right: 79 80
type_specifier (116)
    on left: 83 84 85 86, on right: 77 78 87 88
specifier_qualifier_list (117)
    on left: 87 88, on right: 87 106
declarator (118)
    on left: 89 90, on right: 81 82 92 102 103 137 138 139 140
direct_declarator (119)
    on left: 91 92 93 94 95 96 97, on right: 89 90 93 94 95 96 97
pointer (120)
    on left: 98 99, on right: 89 99
parameter_type_list (121)
    on left: 100 101, on right: 95
parameter_list (122)
    on left: 102 103, on right: 101 103
identifier_list (123)
    on left: 104 105, on right: 96 105
type_name (124)
    on left: 106, on right: 29
id_var (125)
    on left: 107, on right: 1 12 13 91 104 105
initializer (126)
    on left: 108, on right: 82
statement (127)
    on left: 109 110 111 112 113, on right: 119 124 125 126 127 128
    129 130
compound_statement (128)
    on left: 114 115, on right: 109 137 138 139 140
block_item_list (129)
    on left: 116 117, on right: 115 117
block_item (130)
    on left: 118 119, on right: 116 117
expression_statement (131)
    on left: 120 121, on right: 110 129 130
expression_opt (132)
    on left: 122 123, on right: 121
selection_statement (133)
    on left: 124 125 126, on right: 111
iteration_statement (134)
    on left: 127 128 129 130, on right: 112
jump_statement (135)
    on left: 131 132, on right: 113
translation_unit (136)
    on left: 133 134, on right: 0 134
external_declaration (137)
    on left: 135 136, on right: 133 134
function_definition (138)
    on left: 137 138 139 140, on right: 135
declaration_list (139)
    on left: 141 142, on right: 137 139 142
M1 (140)
    on left: 143, on right: 49 124 125
N1 (141)
    on left: 144, on right: 125


State 0

    0 $accept: . translation_unit $end

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declaration             go to state 8
    declaration_specifiers  go to state 9
    type_specifier          go to state 10
    declarator              go to state 11
    direct_declarator       go to state 12
    pointer                 go to state 13
    id_var                  go to state 14
    translation_unit        go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17


State 1

   84 type_specifier: CHAR .

    $default  reduce using rule 84 (type_specifier)


State 2

   86 type_specifier: DOUBLE .

    $default  reduce using rule 86 (type_specifier)


State 3

   85 type_specifier: INT .

    $default  reduce using rule 85 (type_specifier)


State 4

   83 type_specifier: VOID .

    $default  reduce using rule 83 (type_specifier)


State 5

  107 id_var: IDENTIFIER .

    $default  reduce using rule 107 (id_var)


State 6

   92 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 18
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 7

   98 pointer: '*' .
   99        | '*' . pointer

    '*'  shift, and go to state 7

    $default  reduce using rule 98 (pointer)

    pointer  go to state 19


State 8

  136 external_declaration: declaration .

    $default  reduce using rule 136 (external_declaration)


State 9

   75 declaration: declaration_specifiers . ';'
   76            | declaration_specifiers . init_declarator_list ';'
  137 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  138                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7
    ';'         shift, and go to state 20

    init_declarator_list  go to state 21
    init_declarator       go to state 22
    declarator            go to state 23
    direct_declarator     go to state 12
    pointer               go to state 13
    id_var                go to state 14


State 10

   77 declaration_specifiers: type_specifier .
   78                       | type_specifier . declaration_specifiers

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 77 (declaration_specifiers)

    declaration_specifiers  go to state 24
    type_specifier          go to state 10


State 11

  139 function_definition: declarator . declaration_list compound_statement
  140                    | declarator . compound_statement

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 26
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 28
    declaration_list        go to state 29


State 12

   90 declarator: direct_declarator .
   93 direct_declarator: direct_declarator . '[' assignment_expression ']'
   94                  | direct_declarator . '[' ']'
   95                  | direct_declarator . '(' parameter_type_list ')'
   96                  | direct_declarator . '(' identifier_list ')'
   97                  | direct_declarator . '(' ')'

    '('  shift, and go to state 30
    '['  shift, and go to state 31

    $default  reduce using rule 90 (declarator)


State 13

   89 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6

    direct_declarator  go to state 32
    id_var             go to state 14


State 14

   91 direct_declarator: id_var .

    $default  reduce using rule 91 (direct_declarator)


State 15

    0 $accept: translation_unit . $end
  134 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 33
    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declaration             go to state 8
    declaration_specifiers  go to state 9
    type_specifier          go to state 10
    declarator              go to state 11
    direct_declarator       go to state 12
    pointer                 go to state 13
    id_var                  go to state 14
    external_declaration    go to state 34
    function_definition     go to state 17


State 16

  133 translation_unit: external_declaration .

    $default  reduce using rule 133 (translation_unit)


State 17

  135 external_declaration: function_definition .

    $default  reduce using rule 135 (external_declaration)


State 18

   92 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 35


State 19

   99 pointer: '*' pointer .

    $default  reduce using rule 99 (pointer)


State 20

   75 declaration: declaration_specifiers ';' .

    $default  reduce using rule 75 (declaration)


State 21

   76 declaration: declaration_specifiers init_declarator_list . ';'
   80 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 36
    ';'  shift, and go to state 37


State 22

   79 init_declarator_list: init_declarator .

    $default  reduce using rule 79 (init_declarator_list)


State 23

   81 init_declarator: declarator .
   82                | declarator . '=' initializer
  137 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  138                    | declaration_specifiers declarator . compound_statement

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '='     shift, and go to state 38
    '{'     shift, and go to state 25

    $default  reduce using rule 81 (init_declarator)

    declaration             go to state 26
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 39
    declaration_list        go to state 40


State 24

   78 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 78 (declaration_specifiers)


State 25

  114 compound_statement: '{' . '}'
  115                   | '{' . block_item_list '}'

    CHAR                shift, and go to state 1
    DO                  shift, and go to state 41
    DOUBLE              shift, and go to state 2
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    INT                 shift, and go to state 3
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    VOID                shift, and go to state 4
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25
    '}'                 shift, and go to state 61

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    declaration                go to state 81
    declaration_specifiers     go to state 27
    type_specifier             go to state 10
    id_var                     go to state 82
    statement                  go to state 83
    compound_statement         go to state 84
    block_item_list            go to state 85
    block_item                 go to state 86
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 26

  141 declaration_list: declaration .

    $default  reduce using rule 141 (declaration_list)


State 27

   75 declaration: declaration_specifiers . ';'
   76            | declaration_specifiers . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7
    ';'         shift, and go to state 20

    init_declarator_list  go to state 21
    init_declarator       go to state 22
    declarator            go to state 92
    direct_declarator     go to state 12
    pointer               go to state 13
    id_var                go to state 14


State 28

  140 function_definition: declarator compound_statement .

    $default  reduce using rule 140 (function_definition)


State 29

  139 function_definition: declarator declaration_list . compound_statement
  142 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 93
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 94


State 30

   95 direct_declarator: direct_declarator '(' . parameter_type_list ')'
   96                  | direct_declarator '(' . identifier_list ')'
   97                  | direct_declarator '(' . ')'

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    ')'         shift, and go to state 95

    ')'  [reduce using rule 100 (parameter_type_list)]

    declaration_specifiers  go to state 96
    type_specifier          go to state 10
    parameter_type_list     go to state 97
    parameter_list          go to state 98
    identifier_list         go to state 99
    id_var                  go to state 100


State 31

   93 direct_declarator: direct_declarator '[' . assignment_expression ']'
   94                  | direct_declarator '[' . ']'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    ']'                 shift, and go to state 101
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 102
    id_var                     go to state 82


State 32

   89 declarator: pointer direct_declarator .
   93 direct_declarator: direct_declarator . '[' assignment_expression ']'
   94                  | direct_declarator . '[' ']'
   95                  | direct_declarator . '(' parameter_type_list ')'
   96                  | direct_declarator . '(' identifier_list ')'
   97                  | direct_declarator . '(' ')'

    '('  shift, and go to state 30
    '['  shift, and go to state 31

    $default  reduce using rule 89 (declarator)


State 33

    0 $accept: translation_unit $end .

    $default  accept


State 34

  134 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 134 (translation_unit)


State 35

   92 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 92 (direct_declarator)


State 36

   80 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    init_declarator    go to state 103
    declarator         go to state 92
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 37

   76 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 76 (declaration)


State 38

   82 init_declarator: declarator '=' . initializer

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 104
    id_var                     go to state 82
    initializer                go to state 105


State 39

  138 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 138 (function_definition)


State 40

  137 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  142 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 93
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 106


State 41

  128 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 107
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 42

  129 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  130                    | FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 108


State 43

  124 selection_statement: IF . '(' expression ')' M1 statement
  125                    | IF . '(' expression ')' M1 statement N1 ELSE M1 statement

    '('  shift, and go to state 109


State 44

  131 jump_statement: RETURN . ';'
  132               | RETURN . expression ';'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 110

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 111
    id_var                     go to state 82


State 45

  126 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 112


State 46

  127 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 113


State 47

    5 CONSTANT: INTEGER_CONSTANT .

    $default  reduce using rule 5 (CONSTANT)


State 48

    7 CONSTANT: FLOATING_CONSTANT .

    $default  reduce using rule 7 (CONSTANT)


State 49

    6 CONSTANT: CHARACTER_CONSTANT .

    $default  reduce using rule 6 (CONSTANT)


State 50

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 51

   19 unary_expression: INC_OP . unary_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 114
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 115
    unary_operator      go to state 66
    id_var              go to state 82


State 52

   20 unary_expression: DEC_OP . unary_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 114
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 116
    unary_operator      go to state 66
    id_var              go to state 82


State 53

    4 primary_expression: '(' . expression ')'
   29 cast_expression: '(' . type_name ')' cast_expression

    CHAR                shift, and go to state 1
    DOUBLE              shift, and go to state 2
    INT                 shift, and go to state 3
    VOID                shift, and go to state 4
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    type_name                  go to state 120
    id_var                     go to state 82


State 54

   22 unary_operator: '&' .

    $default  reduce using rule 22 (unary_operator)


State 55

   23 unary_operator: '*' .

    $default  reduce using rule 23 (unary_operator)


State 56

   24 unary_operator: '+' .

    $default  reduce using rule 24 (unary_operator)


State 57

   25 unary_operator: '-' .

    $default  reduce using rule 25 (unary_operator)


State 58

   26 unary_operator: '~' .

    $default  reduce using rule 26 (unary_operator)


State 59

   27 unary_operator: '!' .

    $default  reduce using rule 27 (unary_operator)


State 60

  120 expression_statement: ';' .

    $default  reduce using rule 120 (expression_statement)


State 61

  114 compound_statement: '{' '}' .

    $default  reduce using rule 114 (compound_statement)


State 62

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 63

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 64

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' ')'
   11                   | postfix_expression . '(' argument_expression_list ')'
   12                   | postfix_expression . '.' id_var
   13                   | postfix_expression . PTR_OP id_var
   14                   | postfix_expression . INC_OP
   15                   | postfix_expression . DEC_OP
   18 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 121
    PTR_OP  shift, and go to state 122
    DEC_OP  shift, and go to state 123
    '('     shift, and go to state 124
    '['     shift, and go to state 125
    '.'     shift, and go to state 126

    $default  reduce using rule 18 (unary_expression)


State 65

   28 cast_expression: unary_expression .
   61 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 127
    DIV_ASSIGN    shift, and go to state 128
    MOD_ASSIGN    shift, and go to state 129
    ADD_ASSIGN    shift, and go to state 130
    SUB_ASSIGN    shift, and go to state 131
    LEFT_ASSIGN   shift, and go to state 132
    RIGHT_ASSIGN  shift, and go to state 133
    AND_ASSIGN    shift, and go to state 134
    XOR_ASSIGN    shift, and go to state 135
    OR_ASSIGN     shift, and go to state 136
    '='           shift, and go to state 137

    $default  reduce using rule 28 (cast_expression)

    assignment_operator  go to state 138


State 66

   21 unary_expression: unary_operator . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 139
    unary_operator      go to state 66
    cast_expression     go to state 140
    id_var              go to state 82


State 67

   30 multiplicative_expression: cast_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 68

   31 multiplicative_expression: multiplicative_expression . '*' cast_expression
   32                          | multiplicative_expression . '/' cast_expression
   33                          | multiplicative_expression . '%' cast_expression
   34 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 34 (additive_expression)


State 69

   35 additive_expression: additive_expression . '+' multiplicative_expression
   36                    | additive_expression . '-' multiplicative_expression
   37 shift_expression: additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 37 (shift_expression)


State 70

   38 shift_expression: shift_expression . LEFT_OP additive_expression
   39                 | shift_expression . RIGHT_OP additive_expression
   40 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 146
    RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 40 (relational_expression)


State 71

   41 relational_expression: relational_expression . '<' shift_expression
   42                      | relational_expression . '>' shift_expression
   43                      | relational_expression . LE_OP shift_expression
   44                      | relational_expression . GE_OP shift_expression
   45 equality_expression: relational_expression .

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 45 (equality_expression)


State 72

   46 equality_expression: equality_expression . EQ_OP relational_expression
   47                    | equality_expression . NE_OP relational_expression
   48 and_expression: equality_expression .

    EQ_OP  shift, and go to state 152
    NE_OP  shift, and go to state 153

    $default  reduce using rule 48 (and_expression)


State 73

   49 and_expression: and_expression . '&' M1 equality_expression
   50 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 154

    $default  reduce using rule 50 (exclusive_or_expression)


State 74

   51 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   52 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 155

    $default  reduce using rule 52 (inclusive_or_expression)


State 75

   53 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   54 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 156

    $default  reduce using rule 54 (logical_and_expression)


State 76

   55 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   56 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 157

    $default  reduce using rule 56 (logical_or_expression)


State 77

   57 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   58 conditional_expression: logical_or_expression .
   59                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 158
    '?'    shift, and go to state 159

    $default  reduce using rule 58 (conditional_expression)


State 78

   60 assignment_expression: conditional_expression .

    $default  reduce using rule 60 (assignment_expression)


State 79

   73 expression: assignment_expression .

    $default  reduce using rule 73 (expression)


State 80

   74 expression: expression . ',' assignment_expression
  122 expression_opt: expression .

    ','  shift, and go to state 160

    $default  reduce using rule 122 (expression_opt)


State 81

  118 block_item: declaration .

    $default  reduce using rule 118 (block_item)


State 82

    1 primary_expression: id_var .

    $default  reduce using rule 1 (primary_expression)


State 83

  119 block_item: statement .

    $default  reduce using rule 119 (block_item)


State 84

  109 statement: compound_statement .

    $default  reduce using rule 109 (statement)


State 85

  115 compound_statement: '{' block_item_list . '}'
  117 block_item_list: block_item_list . block_item

    CHAR                shift, and go to state 1
    DO                  shift, and go to state 41
    DOUBLE              shift, and go to state 2
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    INT                 shift, and go to state 3
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    VOID                shift, and go to state 4
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25
    '}'                 shift, and go to state 161

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    declaration                go to state 81
    declaration_specifiers     go to state 27
    type_specifier             go to state 10
    id_var                     go to state 82
    statement                  go to state 83
    compound_statement         go to state 84
    block_item                 go to state 162
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 86

  116 block_item_list: block_item .

    $default  reduce using rule 116 (block_item_list)


State 87

  110 statement: expression_statement .

    $default  reduce using rule 110 (statement)


State 88

  121 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 163


State 89

  111 statement: selection_statement .

    $default  reduce using rule 111 (statement)


State 90

  112 statement: iteration_statement .

    $default  reduce using rule 112 (statement)


State 91

  113 statement: jump_statement .

    $default  reduce using rule 113 (statement)


State 92

   81 init_declarator: declarator .
   82                | declarator . '=' initializer

    '='  shift, and go to state 38

    $default  reduce using rule 81 (init_declarator)


State 93

  142 declaration_list: declaration_list declaration .

    $default  reduce using rule 142 (declaration_list)


State 94

  139 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 139 (function_definition)


State 95

   97 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 97 (direct_declarator)


State 96

  102 parameter_list: declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 164
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 97

   95 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 165


State 98

  101 parameter_type_list: parameter_list .
  103 parameter_list: parameter_list . ',' declaration_specifiers declarator

    ','  shift, and go to state 166

    $default  reduce using rule 101 (parameter_type_list)


State 99

   96 direct_declarator: direct_declarator '(' identifier_list . ')'
  105 identifier_list: identifier_list . ',' id_var

    ')'  shift, and go to state 167
    ','  shift, and go to state 168


State 100

  104 identifier_list: id_var .

    $default  reduce using rule 104 (identifier_list)


State 101

   94 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 94 (direct_declarator)


State 102

   93 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 169


State 103

   80 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 80 (init_declarator_list)


State 104

  108 initializer: assignment_expression .

    $default  reduce using rule 108 (initializer)


State 105

   82 init_declarator: declarator '=' initializer .

    $default  reduce using rule 82 (init_declarator)


State 106

  137 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 137 (function_definition)


State 107

  128 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 170


State 108

  129 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  130                    | FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    expression_statement       go to state 171
    expression_opt             go to state 88


State 109

  124 selection_statement: IF '(' . expression ')' M1 statement
  125                    | IF '(' . expression ')' M1 statement N1 ELSE M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 172
    id_var                     go to state 82


State 110

  131 jump_statement: RETURN ';' .

    $default  reduce using rule 131 (jump_statement)


State 111

   74 expression: expression . ',' assignment_expression
  132 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 160
    ';'  shift, and go to state 173


State 112

  126 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 174
    id_var                     go to state 82


State 113

  127 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 175
    id_var                     go to state 82


State 114

    4 primary_expression: '(' . expression ')'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 117
    id_var                     go to state 82


State 115

   19 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 116

   20 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 117

    4 primary_expression: '(' expression . ')'
   74 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 176
    ','  shift, and go to state 160


State 118

   87 specifier_qualifier_list: type_specifier . specifier_qualifier_list
   88                         | type_specifier .

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 88 (specifier_qualifier_list)

    type_specifier            go to state 118
    specifier_qualifier_list  go to state 177


State 119

  106 type_name: specifier_qualifier_list .

    $default  reduce using rule 106 (type_name)


State 120

   29 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 178


State 121

   14 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 14 (postfix_expression)


State 122

   13 postfix_expression: postfix_expression PTR_OP . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 179


State 123

   15 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 15 (postfix_expression)


State 124

   10 postfix_expression: postfix_expression '(' . ')'
   11                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    ')'                 shift, and go to state 180
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    argument_expression_list   go to state 181
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 182
    id_var                     go to state 82


State 125

    9 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 183
    id_var                     go to state 82


State 126

   12 postfix_expression: postfix_expression '.' . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 184


State 127

   63 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


State 128

   64 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


State 129

   65 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


State 130

   66 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 131

   67 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 132

   68 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 133

   69 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 134

   70 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 135

   71 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 136

   72 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 137

   62 assignment_operator: '=' .

    $default  reduce using rule 62 (assignment_operator)


State 138

   61 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 185
    id_var                     go to state 82


State 139

   28 cast_expression: unary_expression .

    $default  reduce using rule 28 (cast_expression)


State 140

   21 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 21 (unary_expression)


State 141

   31 multiplicative_expression: multiplicative_expression '*' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 139
    unary_operator      go to state 66
    cast_expression     go to state 186
    id_var              go to state 82


State 142

   32 multiplicative_expression: multiplicative_expression '/' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 139
    unary_operator      go to state 66
    cast_expression     go to state 187
    id_var              go to state 82


State 143

   33 multiplicative_expression: multiplicative_expression '%' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 139
    unary_operator      go to state 66
    cast_expression     go to state 188
    id_var              go to state 82


State 144

   35 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 189
    id_var                     go to state 82


State 145

   36 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 190
    id_var                     go to state 82


State 146

   38 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 191
    id_var                     go to state 82


State 147

   39 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 192
    id_var                     go to state 82


State 148

   43 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 193
    id_var                     go to state 82


State 149

   44 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 194
    id_var                     go to state 82


State 150

   41 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 195
    id_var                     go to state 82


State 151

   42 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 196
    id_var                     go to state 82


State 152

   46 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 197
    id_var                     go to state 82


State 153

   47 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 198
    id_var                     go to state 82


State 154

   49 and_expression: and_expression '&' . M1 equality_expression

    $default  reduce using rule 143 (M1)

    M1  go to state 199


State 155

   51 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 200
    id_var                     go to state 82


State 156

   53 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 201
    id_var                     go to state 82


State 157

   55 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 202
    id_var                     go to state 82


State 158

   57 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 203
    id_var                     go to state 82


State 159

   59 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 204
    id_var                     go to state 82


State 160

   74 expression: expression ',' . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 205
    id_var                     go to state 82


State 161

  115 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 115 (compound_statement)


State 162

  117 block_item_list: block_item_list block_item .

    $default  reduce using rule 117 (block_item_list)


State 163

  121 expression_statement: expression_opt ';' .

    $default  reduce using rule 121 (expression_statement)


State 164

  102 parameter_list: declaration_specifiers declarator .

    $default  reduce using rule 102 (parameter_list)


State 165

   95 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 95 (direct_declarator)


State 166

  103 parameter_list: parameter_list ',' . declaration_specifiers declarator

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    declaration_specifiers  go to state 206
    type_specifier          go to state 10


State 167

   96 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 96 (direct_declarator)


State 168

  105 identifier_list: identifier_list ',' . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 207


State 169

   93 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 93 (direct_declarator)


State 170

  128 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 208


State 171

  129 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
  130                    | FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    expression_statement       go to state 209
    expression_opt             go to state 88


State 172

   74 expression: expression . ',' assignment_expression
  124 selection_statement: IF '(' expression . ')' M1 statement
  125                    | IF '(' expression . ')' M1 statement N1 ELSE M1 statement

    ')'  shift, and go to state 210
    ','  shift, and go to state 160


State 173

  132 jump_statement: RETURN expression ';' .

    $default  reduce using rule 132 (jump_statement)


State 174

   74 expression: expression . ',' assignment_expression
  126 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 211
    ','  shift, and go to state 160


State 175

   74 expression: expression . ',' assignment_expression
  127 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 212
    ','  shift, and go to state 160


State 176

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


State 177

   87 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 87 (specifier_qualifier_list)


State 178

   29 cast_expression: '(' type_name ')' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression  go to state 62
    CONSTANT            go to state 63
    postfix_expression  go to state 64
    unary_expression    go to state 139
    unary_operator      go to state 66
    cast_expression     go to state 213
    id_var              go to state 82


State 179

   13 postfix_expression: postfix_expression PTR_OP id_var .

    $default  reduce using rule 13 (postfix_expression)


State 180

   10 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 10 (postfix_expression)


State 181

   11 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   17 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 214
    ','  shift, and go to state 215


State 182

   16 argument_expression_list: assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


State 183

    9 postfix_expression: postfix_expression '[' expression . ']'
   74 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 216
    ','  shift, and go to state 160


State 184

   12 postfix_expression: postfix_expression '.' id_var .

    $default  reduce using rule 12 (postfix_expression)


State 185

   61 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 61 (assignment_expression)


State 186

   31 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 187

   32 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 188

   33 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 189

   31 multiplicative_expression: multiplicative_expression . '*' cast_expression
   32                          | multiplicative_expression . '/' cast_expression
   33                          | multiplicative_expression . '%' cast_expression
   35 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 35 (additive_expression)


State 190

   31 multiplicative_expression: multiplicative_expression . '*' cast_expression
   32                          | multiplicative_expression . '/' cast_expression
   33                          | multiplicative_expression . '%' cast_expression
   36 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 36 (additive_expression)


State 191

   35 additive_expression: additive_expression . '+' multiplicative_expression
   36                    | additive_expression . '-' multiplicative_expression
   38 shift_expression: shift_expression LEFT_OP additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 38 (shift_expression)


State 192

   35 additive_expression: additive_expression . '+' multiplicative_expression
   36                    | additive_expression . '-' multiplicative_expression
   39 shift_expression: shift_expression RIGHT_OP additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 39 (shift_expression)


State 193

   38 shift_expression: shift_expression . LEFT_OP additive_expression
   39                 | shift_expression . RIGHT_OP additive_expression
   43 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 146
    RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 43 (relational_expression)


State 194

   38 shift_expression: shift_expression . LEFT_OP additive_expression
   39                 | shift_expression . RIGHT_OP additive_expression
   44 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 146
    RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 44 (relational_expression)


State 195

   38 shift_expression: shift_expression . LEFT_OP additive_expression
   39                 | shift_expression . RIGHT_OP additive_expression
   41 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 146
    RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 41 (relational_expression)


State 196

   38 shift_expression: shift_expression . LEFT_OP additive_expression
   39                 | shift_expression . RIGHT_OP additive_expression
   42 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 146
    RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 42 (relational_expression)


State 197

   41 relational_expression: relational_expression . '<' shift_expression
   42                      | relational_expression . '>' shift_expression
   43                      | relational_expression . LE_OP shift_expression
   44                      | relational_expression . GE_OP shift_expression
   46 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 46 (equality_expression)


State 198

   41 relational_expression: relational_expression . '<' shift_expression
   42                      | relational_expression . '>' shift_expression
   43                      | relational_expression . LE_OP shift_expression
   44                      | relational_expression . GE_OP shift_expression
   47 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 148
    GE_OP  shift, and go to state 149
    '<'    shift, and go to state 150
    '>'    shift, and go to state 151

    $default  reduce using rule 47 (equality_expression)


State 199

   49 and_expression: and_expression '&' M1 . equality_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 217
    id_var                     go to state 82


State 200

   49 and_expression: and_expression . '&' M1 equality_expression
   51 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 154

    $default  reduce using rule 51 (exclusive_or_expression)


State 201

   51 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   53 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 155

    $default  reduce using rule 53 (inclusive_or_expression)


State 202

   53 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   55 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 156

    $default  reduce using rule 55 (logical_and_expression)


State 203

   55 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   57 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 157

    $default  reduce using rule 57 (logical_or_expression)


State 204

   59 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   74 expression: expression . ',' assignment_expression

    ','  shift, and go to state 160
    ':'  shift, and go to state 218


State 205

   74 expression: expression ',' assignment_expression .

    $default  reduce using rule 74 (expression)


State 206

  103 parameter_list: parameter_list ',' declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 219
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 207

  105 identifier_list: identifier_list ',' id_var .

    $default  reduce using rule 105 (identifier_list)


State 208

  128 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 220
    id_var                     go to state 82


State 209

  129 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
  130                    | FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    ')'                 shift, and go to state 221
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 222
    id_var                     go to state 82


State 210

  124 selection_statement: IF '(' expression ')' . M1 statement
  125                    | IF '(' expression ')' . M1 statement N1 ELSE M1 statement

    $default  reduce using rule 143 (M1)

    M1  go to state 223


State 211

  126 selection_statement: SWITCH '(' expression ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 224
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 212

  127 iteration_statement: WHILE '(' expression ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 225
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 213

   29 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 29 (cast_expression)


State 214

   11 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 11 (postfix_expression)


State 215

   17 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 226
    id_var                     go to state 82


State 216

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


State 217

   46 equality_expression: equality_expression . EQ_OP relational_expression
   47                    | equality_expression . NE_OP relational_expression
   49 and_expression: and_expression '&' M1 equality_expression .

    EQ_OP  shift, and go to state 152
    NE_OP  shift, and go to state 153

    $default  reduce using rule 49 (and_expression)


State 218

   59 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 139
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 227
    id_var                     go to state 82


State 219

  103 parameter_list: parameter_list ',' declaration_specifiers declarator .

    $default  reduce using rule 103 (parameter_list)


State 220

   74 expression: expression . ',' assignment_expression
  128 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 228
    ','  shift, and go to state 160


State 221

  129 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 229
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 222

   74 expression: expression . ',' assignment_expression
  130 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 230
    ','  shift, and go to state 160


State 223

  124 selection_statement: IF '(' expression ')' M1 . statement
  125                    | IF '(' expression ')' M1 . statement N1 ELSE M1 statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 231
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 224

  126 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 126 (selection_statement)


State 225

  127 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 127 (iteration_statement)


State 226

   17 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 227

   59 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 59 (conditional_expression)


State 228

  128 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 232


State 229

  129 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 129 (iteration_statement)


State 230

  130 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 233
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 231

  124 selection_statement: IF '(' expression ')' M1 statement .
  125                    | IF '(' expression ')' M1 statement . N1 ELSE M1 statement

    ELSE      reduce using rule 124 (selection_statement)
    ELSE      [reduce using rule 144 (N1)]
    $default  reduce using rule 124 (selection_statement)

    N1  go to state 234


State 232

  128 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 128 (iteration_statement)


State 233

  130 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 130 (iteration_statement)


State 234

  125 selection_statement: IF '(' expression ')' M1 statement N1 . ELSE M1 statement

    ELSE  shift, and go to state 235


State 235

  125 selection_statement: IF '(' expression ')' M1 statement N1 ELSE . M1 statement

    $default  reduce using rule 143 (M1)

    M1  go to state 236


State 236

  125 selection_statement: IF '(' expression ')' M1 statement N1 ELSE M1 . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    INC_OP              shift, and go to state 51
    DEC_OP              shift, and go to state 52
    '('                 shift, and go to state 53
    '&'                 shift, and go to state 54
    '*'                 shift, and go to state 55
    '+'                 shift, and go to state 56
    '-'                 shift, and go to state 57
    '~'                 shift, and go to state 58
    '!'                 shift, and go to state 59
    ';'                 shift, and go to state 60
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 123 (expression_opt)]

    primary_expression         go to state 62
    CONSTANT                   go to state 63
    postfix_expression         go to state 64
    unary_expression           go to state 65
    unary_operator             go to state 66
    cast_expression            go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    shift_expression           go to state 70
    relational_expression      go to state 71
    equality_expression        go to state 72
    and_expression             go to state 73
    exclusive_or_expression    go to state 74
    inclusive_or_expression    go to state 75
    logical_and_expression     go to state 76
    logical_or_expression      go to state 77
    conditional_expression     go to state 78
    assignment_expression      go to state 79
    expression                 go to state 80
    id_var                     go to state 82
    statement                  go to state 237
    compound_statement         go to state 84
    expression_statement       go to state 87
    expression_opt             go to state 88
    selection_statement        go to state 89
    iteration_statement        go to state 90
    jump_statement             go to state 91


State 237

  125 selection_statement: IF '(' expression ')' M1 statement N1 ELSE M1 statement .

    $default  reduce using rule 125 (selection_statement)
