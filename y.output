Nonterminals useless in grammar

   unary_operator
   constant_expression
   designation
   designator_list
   designator


Terminals unused in grammar

   AUTO
   BREAK
   CASE
   CONTINUE
   DEFAULT
   ENUM
   EXTERN
   FLOAT
   GOTO
   INLINE
   LONG
   REGISTER
   RESTRICT
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   TYPEDEF
   UNION
   UNSIGNED
   VOLATILE
   BOOL
   COMPLEX
   IMAGINARY
   ENUMERATION_CONSTANT
   '~'
   '!'


Rules useless in grammar

  138 unary_operator: '&'
  139               | '*'
  140               | '+'
  141               | '-'
  142               | '~'
  143               | '!'

  144 constant_expression: conditional_expression

  145 designation: designator_list '='

  146 designator_list: designator
  147                | designator_list designator

  148 designator: '[' constant_expression ']'
  149           | '.' id_var


Rules useless in parser due to conflicts

   93 parameter_type_list: /* empty */

  110 block_item_list_opt: /* empty */

  118 expression_opt: /* empty */


State 25 conflicts: 2 shift/reduce
State 30 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 202 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 223 conflicts: 1 reduce/reduce
State 224 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce
State 238 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 M1: /* empty */

    2 N1: /* empty */

    3 primary_expression: id_var
    4                   | CONSTANT
    5                   | STRING_LITERAL
    6                   | '(' expression ')'

    7 CONSTANT: INTEGER_CONSTANT
    8         | CHARACTER_CONSTANT
    9         | FLOATING_CONSTANT

   10 postfix_expression: primary_expression
   11                   | postfix_expression '[' expression ']'
   12                   | postfix_expression '(' ')'
   13                   | postfix_expression '(' argument_expression_list ')'
   14                   | postfix_expression '.' id_var
   15                   | postfix_expression PTR_OP id_var
   16                   | postfix_expression INC_OP
   17                   | postfix_expression DEC_OP

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list ',' assignment_expression

   20 unary_expression: postfix_expression

   21 cast_expression: unary_expression
   22                | '(' type_name ')' cast_expression

   23 multiplicative_expression: cast_expression
   24                          | multiplicative_expression '*' cast_expression
   25                          | multiplicative_expression '/' cast_expression
   26                          | multiplicative_expression '%' cast_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression '+' multiplicative_expression
   29                    | additive_expression '-' multiplicative_expression

   30 shift_expression: additive_expression
   31                 | shift_expression LEFT_OP additive_expression
   32                 | shift_expression RIGHT_OP additive_expression

   33 relational_expression: shift_expression
   34                      | relational_expression '<' shift_expression
   35                      | relational_expression '>' shift_expression
   36                      | relational_expression LE_OP shift_expression
   37                      | relational_expression GE_OP shift_expression

   38 equality_expression: relational_expression
   39                    | equality_expression EQ_OP relational_expression
   40                    | equality_expression NE_OP relational_expression

   41 and_expression: equality_expression
   42               | and_expression '&' equality_expression

   43 exclusive_or_expression: and_expression
   44                        | exclusive_or_expression '^' and_expression

   45 inclusive_or_expression: exclusive_or_expression
   46                        | inclusive_or_expression '|' exclusive_or_expression

   47 logical_and_expression: inclusive_or_expression
   48                       | logical_and_expression AND_OP M1 inclusive_or_expression

   49 logical_or_expression: logical_and_expression
   50                      | logical_or_expression OR_OP M1 logical_and_expression

   51 conditional_expression: logical_or_expression
   52                       | logical_or_expression '?' expression ':' conditional_expression

   53 assignment_expression: conditional_expression
   54                      | unary_expression assignment_operator assignment_expression

   55 assignment_operator: '='
   56                    | MUL_ASSIGN
   57                    | DIV_ASSIGN
   58                    | MOD_ASSIGN
   59                    | ADD_ASSIGN
   60                    | SUB_ASSIGN
   61                    | LEFT_ASSIGN
   62                    | RIGHT_ASSIGN
   63                    | AND_ASSIGN
   64                    | XOR_ASSIGN
   65                    | OR_ASSIGN

   66 expression: assignment_expression
   67           | expression ',' assignment_expression

   68 declaration: declaration_specifiers ';'
   69            | declaration_specifiers init_declarator_list ';'

   70 declaration_specifiers: type_specifier
   71                       | type_specifier declaration_specifiers

   72 init_declarator_list: init_declarator
   73                     | init_declarator_list ',' init_declarator

   74 init_declarator: declarator
   75                | declarator '=' initializer

   76 type_specifier: VOID
   77               | CHAR
   78               | INT
   79               | DOUBLE

   80 specifier_qualifier_list: type_specifier specifier_qualifier_list
   81                         | type_specifier

   82 declarator: pointer direct_declarator
   83           | direct_declarator

   84 direct_declarator: id_var
   85                  | '(' declarator ')'
   86                  | direct_declarator '[' assignment_expression ']'
   87                  | direct_declarator '[' ']'
   88                  | direct_declarator '(' parameter_type_list ')'
   89                  | direct_declarator '(' identifier_list ')'
   90                  | direct_declarator '(' ')'

   91 pointer: '*'
   92        | '*' pointer

   93 parameter_type_list: /* empty */
   94                    | parameter_list

   95 parameter_list: declaration_specifiers declarator
   96               | parameter_list ',' declaration_specifiers declarator

   97 identifier_list: id_var
   98                | identifier_list ',' id_var

   99 type_name: specifier_qualifier_list

  100 id_var: IDENTIFIER

  101 initializer: assignment_expression

  102 statement: compound_statement
  103          | expression_statement
  104          | selection_statement
  105          | iteration_statement
  106          | jump_statement

  107 compound_statement: '{' '}'
  108                   | '{' block_item_list_opt '}'

  109 block_item_list_opt: block_item_list
  110                    | /* empty */

  111 block_item_list: block_item
  112                | block_item_list M1 block_item

  113 block_item: declaration
  114           | statement

  115 expression_statement: ';'
  116                     | expression_opt ';'

  117 expression_opt: expression
  118               | /* empty */

  119 selection_statement: IF '(' expression ')' M1 statement N1 ELSE M1 statement
  120                    | IF '(' expression ')' M1 statement
  121                    | SWITCH '(' expression ')' statement

  122 iteration_statement: WHILE M1 '(' expression ')' M1 statement
  123                    | DO M1 statement M1 WHILE '(' expression ')' ';'
  124                    | FOR '(' expression_statement expression_statement ')' statement
  125                    | FOR '(' expression ';' M1 expression ';' M1 expression N1 ')' M1 statement

  126 jump_statement: RETURN ';'
  127               | RETURN expression ';'

  128 translation_unit: external_declaration
  129                 | translation_unit external_declaration

  130 external_declaration: function_definition
  131                     | declaration

  132 function_definition: declaration_specifiers declarator declaration_list compound_statement
  133                    | declaration_specifiers declarator compound_statement
  134                    | declarator declaration_list compound_statement
  135                    | declarator compound_statement

  136 declaration_list: declaration
  137                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 26
'&' (38) 42
'(' (40) 6 12 13 22 85 88 89 90 119 120 121 122 123 124 125
')' (41) 6 12 13 22 85 88 89 90 119 120 121 122 123 124 125
'*' (42) 24 91 92
'+' (43) 28
',' (44) 19 67 73 96 98
'-' (45) 29
'.' (46) 14
'/' (47) 25
':' (58) 52
';' (59) 68 69 115 116 123 125 126 127
'<' (60) 34
'=' (61) 55 75
'>' (62) 35
'?' (63) 52
'[' (91) 11 86 87
']' (93) 11 86 87
'^' (94) 44
'{' (123) 107 108
'|' (124) 46
'}' (125) 107 108
'~' (126)
error (256)
AUTO (258)
BREAK (259)
CASE (260)
CHAR (261) 77
CONTINUE (262)
DEFAULT (263)
DO (264) 123
DOUBLE (265) 79
ELSE (266) 119
ENUM (267)
EXTERN (268)
FLOAT (269)
FOR (270) 124 125
GOTO (271)
IF (272) 119 120
INLINE (273)
INT (274) 78
LONG (275)
REGISTER (276)
RESTRICT (277)
RETURN (278) 126 127
SHORT (279)
SIGNED (280)
SIZEOF (281)
STATIC (282)
STRUCT (283)
SWITCH (284) 121
TYPEDEF (285)
UNION (286)
UNSIGNED (287)
VOID (288) 76
VOLATILE (289)
WHILE (290) 122 123
BOOL (291)
COMPLEX (292)
IMAGINARY (293)
IDENTIFIER (294) 100
INTEGER_CONSTANT (295) 7
FLOATING_CONSTANT (296) 9
CHARACTER_CONSTANT (297) 8
STRING_LITERAL (298) 5
INC_OP (299) 16
PTR_OP (300) 15
LEFT_OP (301) 31
RIGHT_OP (302) 32
LE_OP (303) 36
GE_OP (304) 37
MUL_ASSIGN (305) 56
DIV_ASSIGN (306) 57
MOD_ASSIGN (307) 58
ADD_ASSIGN (308) 59
SUB_ASSIGN (309) 60
LEFT_ASSIGN (310) 61
DEC_OP (311) 17
EQ_OP (312) 39
RIGHT_ASSIGN (313) 62
NE_OP (314) 40
AND_ASSIGN (315) 63
XOR_ASSIGN (316) 64
AND_OP (317) 48
OR_OP (318) 50
OR_ASSIGN (319) 65
ENUMERATION_CONSTANT (320)
HIGH (321)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
M1 (92)
    on left: 1, on right: 48 50 112 119 120 122 123 125
N1 (93)
    on left: 2, on right: 119 125
primary_expression (94)
    on left: 3 4 5 6, on right: 10
CONSTANT (95)
    on left: 7 8 9, on right: 4
postfix_expression (96)
    on left: 10 11 12 13 14 15 16 17, on right: 11 12 13 14 15 16 17
    20
argument_expression_list (97)
    on left: 18 19, on right: 13 19
unary_expression (98)
    on left: 20, on right: 21 54
cast_expression (99)
    on left: 21 22, on right: 22 23 24 25 26
multiplicative_expression (100)
    on left: 23 24 25 26, on right: 24 25 26 27 28 29
additive_expression (101)
    on left: 27 28 29, on right: 28 29 30 31 32
shift_expression (102)
    on left: 30 31 32, on right: 31 32 33 34 35 36 37
relational_expression (103)
    on left: 33 34 35 36 37, on right: 34 35 36 37 38 39 40
equality_expression (104)
    on left: 38 39 40, on right: 39 40 41 42
and_expression (105)
    on left: 41 42, on right: 42 43 44
exclusive_or_expression (106)
    on left: 43 44, on right: 44 45 46
inclusive_or_expression (107)
    on left: 45 46, on right: 46 47 48
logical_and_expression (108)
    on left: 47 48, on right: 48 49 50
logical_or_expression (109)
    on left: 49 50, on right: 50 51 52
conditional_expression (110)
    on left: 51 52, on right: 52 53
assignment_expression (111)
    on left: 53 54, on right: 18 19 54 66 67 86 101
assignment_operator (112)
    on left: 55 56 57 58 59 60 61 62 63 64 65, on right: 54
expression (113)
    on left: 66 67, on right: 6 11 52 67 117 119 120 121 122 123 125
    127
declaration (114)
    on left: 68 69, on right: 113 131 136 137
declaration_specifiers (115)
    on left: 70 71, on right: 68 69 71 95 96 132 133
init_declarator_list (116)
    on left: 72 73, on right: 69 73
init_declarator (117)
    on left: 74 75, on right: 72 73
type_specifier (118)
    on left: 76 77 78 79, on right: 70 71 80 81
specifier_qualifier_list (119)
    on left: 80 81, on right: 80 99
declarator (120)
    on left: 82 83, on right: 74 75 85 95 96 132 133 134 135
direct_declarator (121)
    on left: 84 85 86 87 88 89 90, on right: 82 83 86 87 88 89 90
pointer (122)
    on left: 91 92, on right: 82 92
parameter_type_list (123)
    on left: 93 94, on right: 88
parameter_list (124)
    on left: 95 96, on right: 94 96
identifier_list (125)
    on left: 97 98, on right: 89 98
type_name (126)
    on left: 99, on right: 22
id_var (127)
    on left: 100, on right: 3 14 15 84 97 98
initializer (128)
    on left: 101, on right: 75
statement (129)
    on left: 102 103 104 105 106, on right: 114 119 120 121 122 123
    124 125
compound_statement (130)
    on left: 107 108, on right: 102 132 133 134 135
block_item_list_opt (131)
    on left: 109 110, on right: 108
block_item_list (132)
    on left: 111 112, on right: 109 112
block_item (133)
    on left: 113 114, on right: 111 112
expression_statement (134)
    on left: 115 116, on right: 103 124
expression_opt (135)
    on left: 117 118, on right: 116
selection_statement (136)
    on left: 119 120 121, on right: 104
iteration_statement (137)
    on left: 122 123 124 125, on right: 105
jump_statement (138)
    on left: 126 127, on right: 106
translation_unit (139)
    on left: 128 129, on right: 0 129
external_declaration (140)
    on left: 130 131, on right: 128 129
function_definition (141)
    on left: 132 133 134 135, on right: 130
declaration_list (142)
    on left: 136 137, on right: 132 134 137


State 0

    0 $accept: . translation_unit $end

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declaration             go to state 8
    declaration_specifiers  go to state 9
    type_specifier          go to state 10
    declarator              go to state 11
    direct_declarator       go to state 12
    pointer                 go to state 13
    id_var                  go to state 14
    translation_unit        go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17


State 1

   77 type_specifier: CHAR .

    $default  reduce using rule 77 (type_specifier)


State 2

   79 type_specifier: DOUBLE .

    $default  reduce using rule 79 (type_specifier)


State 3

   78 type_specifier: INT .

    $default  reduce using rule 78 (type_specifier)


State 4

   76 type_specifier: VOID .

    $default  reduce using rule 76 (type_specifier)


State 5

  100 id_var: IDENTIFIER .

    $default  reduce using rule 100 (id_var)


State 6

   85 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 18
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 7

   91 pointer: '*' .
   92        | '*' . pointer

    '*'  shift, and go to state 7

    $default  reduce using rule 91 (pointer)

    pointer  go to state 19


State 8

  131 external_declaration: declaration .

    $default  reduce using rule 131 (external_declaration)


State 9

   68 declaration: declaration_specifiers . ';'
   69            | declaration_specifiers . init_declarator_list ';'
  132 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  133                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7
    ';'         shift, and go to state 20

    init_declarator_list  go to state 21
    init_declarator       go to state 22
    declarator            go to state 23
    direct_declarator     go to state 12
    pointer               go to state 13
    id_var                go to state 14


State 10

   70 declaration_specifiers: type_specifier .
   71                       | type_specifier . declaration_specifiers

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 70 (declaration_specifiers)

    declaration_specifiers  go to state 24
    type_specifier          go to state 10


State 11

  134 function_definition: declarator . declaration_list compound_statement
  135                    | declarator . compound_statement

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 26
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 28
    declaration_list        go to state 29


State 12

   83 declarator: direct_declarator .
   86 direct_declarator: direct_declarator . '[' assignment_expression ']'
   87                  | direct_declarator . '[' ']'
   88                  | direct_declarator . '(' parameter_type_list ')'
   89                  | direct_declarator . '(' identifier_list ')'
   90                  | direct_declarator . '(' ')'

    '('  shift, and go to state 30
    '['  shift, and go to state 31

    $default  reduce using rule 83 (declarator)


State 13

   82 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6

    direct_declarator  go to state 32
    id_var             go to state 14


State 14

   84 direct_declarator: id_var .

    $default  reduce using rule 84 (direct_declarator)


State 15

    0 $accept: translation_unit . $end
  129 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 33
    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declaration             go to state 8
    declaration_specifiers  go to state 9
    type_specifier          go to state 10
    declarator              go to state 11
    direct_declarator       go to state 12
    pointer                 go to state 13
    id_var                  go to state 14
    external_declaration    go to state 34
    function_definition     go to state 17


State 16

  128 translation_unit: external_declaration .

    $default  reduce using rule 128 (translation_unit)


State 17

  130 external_declaration: function_definition .

    $default  reduce using rule 130 (external_declaration)


State 18

   85 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 35


State 19

   92 pointer: '*' pointer .

    $default  reduce using rule 92 (pointer)


State 20

   68 declaration: declaration_specifiers ';' .

    $default  reduce using rule 68 (declaration)


State 21

   69 declaration: declaration_specifiers init_declarator_list . ';'
   73 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 36
    ';'  shift, and go to state 37


State 22

   72 init_declarator_list: init_declarator .

    $default  reduce using rule 72 (init_declarator_list)


State 23

   74 init_declarator: declarator .
   75                | declarator . '=' initializer
  132 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  133                    | declaration_specifiers declarator . compound_statement

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '='     shift, and go to state 38
    '{'     shift, and go to state 25

    $default  reduce using rule 74 (init_declarator)

    declaration             go to state 26
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 39
    declaration_list        go to state 40


State 24

   71 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 71 (declaration_specifiers)


State 25

  107 compound_statement: '{' . '}'
  108                   | '{' . block_item_list_opt '}'

    CHAR                shift, and go to state 1
    DO                  shift, and go to state 41
    DOUBLE              shift, and go to state 2
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    INT                 shift, and go to state 3
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    VOID                shift, and go to state 4
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25
    '}'                 shift, and go to state 53

    ';'  [reduce using rule 118 (expression_opt)]
    '}'  [reduce using rule 110 (block_item_list_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    declaration                go to state 72
    declaration_specifiers     go to state 27
    type_specifier             go to state 10
    id_var                     go to state 73
    statement                  go to state 74
    compound_statement         go to state 75
    block_item_list_opt        go to state 76
    block_item_list            go to state 77
    block_item                 go to state 78
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 26

  136 declaration_list: declaration .

    $default  reduce using rule 136 (declaration_list)


State 27

   68 declaration: declaration_specifiers . ';'
   69            | declaration_specifiers . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7
    ';'         shift, and go to state 20

    init_declarator_list  go to state 21
    init_declarator       go to state 22
    declarator            go to state 84
    direct_declarator     go to state 12
    pointer               go to state 13
    id_var                go to state 14


State 28

  135 function_definition: declarator compound_statement .

    $default  reduce using rule 135 (function_definition)


State 29

  134 function_definition: declarator declaration_list . compound_statement
  137 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 85
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 86


State 30

   88 direct_declarator: direct_declarator '(' . parameter_type_list ')'
   89                  | direct_declarator '(' . identifier_list ')'
   90                  | direct_declarator '(' . ')'

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    ')'         shift, and go to state 87

    ')'  [reduce using rule 93 (parameter_type_list)]

    declaration_specifiers  go to state 88
    type_specifier          go to state 10
    parameter_type_list     go to state 89
    parameter_list          go to state 90
    identifier_list         go to state 91
    id_var                  go to state 92


State 31

   86 direct_declarator: direct_declarator '[' . assignment_expression ']'
   87                  | direct_declarator '[' . ']'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ']'                 shift, and go to state 93

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 94
    id_var                     go to state 73


State 32

   82 declarator: pointer direct_declarator .
   86 direct_declarator: direct_declarator . '[' assignment_expression ']'
   87                  | direct_declarator . '[' ']'
   88                  | direct_declarator . '(' parameter_type_list ')'
   89                  | direct_declarator . '(' identifier_list ')'
   90                  | direct_declarator . '(' ')'

    '('  shift, and go to state 30
    '['  shift, and go to state 31

    $default  reduce using rule 82 (declarator)


State 33

    0 $accept: translation_unit $end .

    $default  accept


State 34

  129 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 129 (translation_unit)


State 35

   85 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 85 (direct_declarator)


State 36

   73 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    init_declarator    go to state 95
    declarator         go to state 84
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 37

   69 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 69 (declaration)


State 38

   75 init_declarator: declarator '=' . initializer

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 96
    id_var                     go to state 73
    initializer                go to state 97


State 39

  133 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 133 (function_definition)


State 40

  132 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  137 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    '{'     shift, and go to state 25

    declaration             go to state 85
    declaration_specifiers  go to state 27
    type_specifier          go to state 10
    compound_statement      go to state 98


State 41

  123 iteration_statement: DO . M1 statement M1 WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M1)

    M1  go to state 99


State 42

  124 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  125                    | FOR . '(' expression ';' M1 expression ';' M1 expression N1 ')' M1 statement

    '('  shift, and go to state 100


State 43

  119 selection_statement: IF . '(' expression ')' M1 statement N1 ELSE M1 statement
  120                    | IF . '(' expression ')' M1 statement

    '('  shift, and go to state 101


State 44

  126 jump_statement: RETURN . ';'
  127               | RETURN . expression ';'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 102

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 103
    id_var                     go to state 73


State 45

  121 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 104


State 46

  122 iteration_statement: WHILE . M1 '(' expression ')' M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 105


State 47

    7 CONSTANT: INTEGER_CONSTANT .

    $default  reduce using rule 7 (CONSTANT)


State 48

    9 CONSTANT: FLOATING_CONSTANT .

    $default  reduce using rule 9 (CONSTANT)


State 49

    8 CONSTANT: CHARACTER_CONSTANT .

    $default  reduce using rule 8 (CONSTANT)


State 50

    5 primary_expression: STRING_LITERAL .

    $default  reduce using rule 5 (primary_expression)


State 51

    6 primary_expression: '(' . expression ')'
   22 cast_expression: '(' . type_name ')' cast_expression

    CHAR                shift, and go to state 1
    DOUBLE              shift, and go to state 2
    INT                 shift, and go to state 3
    VOID                shift, and go to state 4
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 106
    type_specifier             go to state 107
    specifier_qualifier_list   go to state 108
    type_name                  go to state 109
    id_var                     go to state 73


State 52

  115 expression_statement: ';' .

    $default  reduce using rule 115 (expression_statement)


State 53

  107 compound_statement: '{' '}' .

    $default  reduce using rule 107 (compound_statement)


State 54

   10 postfix_expression: primary_expression .

    $default  reduce using rule 10 (postfix_expression)


State 55

    4 primary_expression: CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 56

   11 postfix_expression: postfix_expression . '[' expression ']'
   12                   | postfix_expression . '(' ')'
   13                   | postfix_expression . '(' argument_expression_list ')'
   14                   | postfix_expression . '.' id_var
   15                   | postfix_expression . PTR_OP id_var
   16                   | postfix_expression . INC_OP
   17                   | postfix_expression . DEC_OP
   20 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 110
    PTR_OP  shift, and go to state 111
    DEC_OP  shift, and go to state 112
    '('     shift, and go to state 113
    '['     shift, and go to state 114
    '.'     shift, and go to state 115

    $default  reduce using rule 20 (unary_expression)


State 57

   21 cast_expression: unary_expression .
   54 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 116
    DIV_ASSIGN    shift, and go to state 117
    MOD_ASSIGN    shift, and go to state 118
    ADD_ASSIGN    shift, and go to state 119
    SUB_ASSIGN    shift, and go to state 120
    LEFT_ASSIGN   shift, and go to state 121
    RIGHT_ASSIGN  shift, and go to state 122
    AND_ASSIGN    shift, and go to state 123
    XOR_ASSIGN    shift, and go to state 124
    OR_ASSIGN     shift, and go to state 125
    '='           shift, and go to state 126

    $default  reduce using rule 21 (cast_expression)

    assignment_operator  go to state 127


State 58

   23 multiplicative_expression: cast_expression .

    $default  reduce using rule 23 (multiplicative_expression)


State 59

   24 multiplicative_expression: multiplicative_expression . '*' cast_expression
   25                          | multiplicative_expression . '/' cast_expression
   26                          | multiplicative_expression . '%' cast_expression
   27 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 27 (additive_expression)


State 60

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   30 shift_expression: additive_expression .

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 30 (shift_expression)


State 61

   31 shift_expression: shift_expression . LEFT_OP additive_expression
   32                 | shift_expression . RIGHT_OP additive_expression
   33 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 133
    RIGHT_OP  shift, and go to state 134

    $default  reduce using rule 33 (relational_expression)


State 62

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE_OP shift_expression
   37                      | relational_expression . GE_OP shift_expression
   38 equality_expression: relational_expression .

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 38 (equality_expression)


State 63

   39 equality_expression: equality_expression . EQ_OP relational_expression
   40                    | equality_expression . NE_OP relational_expression
   41 and_expression: equality_expression .

    EQ_OP  shift, and go to state 139
    NE_OP  shift, and go to state 140

    $default  reduce using rule 41 (and_expression)


State 64

   42 and_expression: and_expression . '&' equality_expression
   43 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 141

    $default  reduce using rule 43 (exclusive_or_expression)


State 65

   44 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   45 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 142

    $default  reduce using rule 45 (inclusive_or_expression)


State 66

   46 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   47 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 143

    $default  reduce using rule 47 (logical_and_expression)


State 67

   48 logical_and_expression: logical_and_expression . AND_OP M1 inclusive_or_expression
   49 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 144

    $default  reduce using rule 49 (logical_or_expression)


State 68

   50 logical_or_expression: logical_or_expression . OR_OP M1 logical_and_expression
   51 conditional_expression: logical_or_expression .
   52                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 145
    '?'    shift, and go to state 146

    $default  reduce using rule 51 (conditional_expression)


State 69

   53 assignment_expression: conditional_expression .

    $default  reduce using rule 53 (assignment_expression)


State 70

   66 expression: assignment_expression .

    $default  reduce using rule 66 (expression)


State 71

   67 expression: expression . ',' assignment_expression
  117 expression_opt: expression .

    ','  shift, and go to state 147

    $default  reduce using rule 117 (expression_opt)


State 72

  113 block_item: declaration .

    $default  reduce using rule 113 (block_item)


State 73

    3 primary_expression: id_var .

    $default  reduce using rule 3 (primary_expression)


State 74

  114 block_item: statement .

    $default  reduce using rule 114 (block_item)


State 75

  102 statement: compound_statement .

    $default  reduce using rule 102 (statement)


State 76

  108 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 148


State 77

  109 block_item_list_opt: block_item_list .
  112 block_item_list: block_item_list . M1 block_item

    '}'       reduce using rule 109 (block_item_list_opt)
    $default  reduce using rule 1 (M1)

    M1  go to state 149


State 78

  111 block_item_list: block_item .

    $default  reduce using rule 111 (block_item_list)


State 79

  103 statement: expression_statement .

    $default  reduce using rule 103 (statement)


State 80

  116 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 150


State 81

  104 statement: selection_statement .

    $default  reduce using rule 104 (statement)


State 82

  105 statement: iteration_statement .

    $default  reduce using rule 105 (statement)


State 83

  106 statement: jump_statement .

    $default  reduce using rule 106 (statement)


State 84

   74 init_declarator: declarator .
   75                | declarator . '=' initializer

    '='  shift, and go to state 38

    $default  reduce using rule 74 (init_declarator)


State 85

  137 declaration_list: declaration_list declaration .

    $default  reduce using rule 137 (declaration_list)


State 86

  134 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 134 (function_definition)


State 87

   90 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 90 (direct_declarator)


State 88

   95 parameter_list: declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 151
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 89

   88 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 152


State 90

   94 parameter_type_list: parameter_list .
   96 parameter_list: parameter_list . ',' declaration_specifiers declarator

    ','  shift, and go to state 153

    $default  reduce using rule 94 (parameter_type_list)


State 91

   89 direct_declarator: direct_declarator '(' identifier_list . ')'
   98 identifier_list: identifier_list . ',' id_var

    ')'  shift, and go to state 154
    ','  shift, and go to state 155


State 92

   97 identifier_list: id_var .

    $default  reduce using rule 97 (identifier_list)


State 93

   87 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 87 (direct_declarator)


State 94

   86 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 156


State 95

   73 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 73 (init_declarator_list)


State 96

  101 initializer: assignment_expression .

    $default  reduce using rule 101 (initializer)


State 97

   75 init_declarator: declarator '=' initializer .

    $default  reduce using rule 75 (init_declarator)


State 98

  132 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 132 (function_definition)


State 99

  123 iteration_statement: DO M1 . statement M1 WHILE '(' expression ')' ';'

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 157
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 100

  124 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  125                    | FOR '(' . expression ';' M1 expression ';' M1 expression N1 ')' M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 158
    id_var                     go to state 73
    expression_statement       go to state 159
    expression_opt             go to state 80


State 101

  119 selection_statement: IF '(' . expression ')' M1 statement N1 ELSE M1 statement
  120                    | IF '(' . expression ')' M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 160
    id_var                     go to state 73


State 102

  126 jump_statement: RETURN ';' .

    $default  reduce using rule 126 (jump_statement)


State 103

   67 expression: expression . ',' assignment_expression
  127 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 147
    ';'  shift, and go to state 161


State 104

  121 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 162
    id_var                     go to state 73


State 105

  122 iteration_statement: WHILE M1 . '(' expression ')' M1 statement

    '('  shift, and go to state 163


State 106

    6 primary_expression: '(' expression . ')'
   67 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 164
    ','  shift, and go to state 147


State 107

   80 specifier_qualifier_list: type_specifier . specifier_qualifier_list
   81                         | type_specifier .

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 81 (specifier_qualifier_list)

    type_specifier            go to state 107
    specifier_qualifier_list  go to state 165


State 108

   99 type_name: specifier_qualifier_list .

    $default  reduce using rule 99 (type_name)


State 109

   22 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 166


State 110

   16 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 16 (postfix_expression)


State 111

   15 postfix_expression: postfix_expression PTR_OP . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 167


State 112

   17 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 17 (postfix_expression)


State 113

   12 postfix_expression: postfix_expression '(' . ')'
   13                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ')'                 shift, and go to state 168

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    argument_expression_list   go to state 169
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 170
    id_var                     go to state 73


State 114

   11 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 171
    id_var                     go to state 73


State 115

   14 postfix_expression: postfix_expression '.' . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 172


State 116

   56 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 56 (assignment_operator)


State 117

   57 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 57 (assignment_operator)


State 118

   58 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 58 (assignment_operator)


State 119

   59 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 59 (assignment_operator)


State 120

   60 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 60 (assignment_operator)


State 121

   61 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 61 (assignment_operator)


State 122

   62 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


State 123

   63 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


State 124

   64 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


State 125

   65 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


State 126

   55 assignment_operator: '=' .

    $default  reduce using rule 55 (assignment_operator)


State 127

   54 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 173
    id_var                     go to state 73


State 128

   24 multiplicative_expression: multiplicative_expression '*' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression  go to state 54
    CONSTANT            go to state 55
    postfix_expression  go to state 56
    unary_expression    go to state 174
    cast_expression     go to state 175
    id_var              go to state 73


State 129

   25 multiplicative_expression: multiplicative_expression '/' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression  go to state 54
    CONSTANT            go to state 55
    postfix_expression  go to state 56
    unary_expression    go to state 174
    cast_expression     go to state 176
    id_var              go to state 73


State 130

   26 multiplicative_expression: multiplicative_expression '%' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression  go to state 54
    CONSTANT            go to state 55
    postfix_expression  go to state 56
    unary_expression    go to state 174
    cast_expression     go to state 177
    id_var              go to state 73


State 131

   28 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 178
    id_var                     go to state 73


State 132

   29 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 179
    id_var                     go to state 73


State 133

   31 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 180
    id_var                     go to state 73


State 134

   32 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 181
    id_var                     go to state 73


State 135

   36 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 182
    id_var                     go to state 73


State 136

   37 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 183
    id_var                     go to state 73


State 137

   34 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 184
    id_var                     go to state 73


State 138

   35 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 185
    id_var                     go to state 73


State 139

   39 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 186
    id_var                     go to state 73


State 140

   40 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 187
    id_var                     go to state 73


State 141

   42 and_expression: and_expression '&' . equality_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 188
    id_var                     go to state 73


State 142

   44 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 189
    id_var                     go to state 73


State 143

   46 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 190
    id_var                     go to state 73


State 144

   48 logical_and_expression: logical_and_expression AND_OP . M1 inclusive_or_expression

    $default  reduce using rule 1 (M1)

    M1  go to state 191


State 145

   50 logical_or_expression: logical_or_expression OR_OP . M1 logical_and_expression

    $default  reduce using rule 1 (M1)

    M1  go to state 192


State 146

   52 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 193
    id_var                     go to state 73


State 147

   67 expression: expression ',' . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 194
    id_var                     go to state 73


State 148

  108 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 108 (compound_statement)


State 149

  112 block_item_list: block_item_list M1 . block_item

    CHAR                shift, and go to state 1
    DO                  shift, and go to state 41
    DOUBLE              shift, and go to state 2
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    INT                 shift, and go to state 3
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    VOID                shift, and go to state 4
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    declaration                go to state 72
    declaration_specifiers     go to state 27
    type_specifier             go to state 10
    id_var                     go to state 73
    statement                  go to state 74
    compound_statement         go to state 75
    block_item                 go to state 195
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 150

  116 expression_statement: expression_opt ';' .

    $default  reduce using rule 116 (expression_statement)


State 151

   95 parameter_list: declaration_specifiers declarator .

    $default  reduce using rule 95 (parameter_list)


State 152

   88 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 88 (direct_declarator)


State 153

   96 parameter_list: parameter_list ',' . declaration_specifiers declarator

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4

    declaration_specifiers  go to state 196
    type_specifier          go to state 10


State 154

   89 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 89 (direct_declarator)


State 155

   98 identifier_list: identifier_list ',' . id_var

    IDENTIFIER  shift, and go to state 5

    id_var  go to state 197


State 156

   86 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 86 (direct_declarator)


State 157

  123 iteration_statement: DO M1 statement . M1 WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M1)

    M1  go to state 198


State 158

   67 expression: expression . ',' assignment_expression
  117 expression_opt: expression .
  125 iteration_statement: FOR '(' expression . ';' M1 expression ';' M1 expression N1 ')' M1 statement

    ','  shift, and go to state 147
    ';'  shift, and go to state 199

    ';'  [reduce using rule 117 (expression_opt)]


State 159

  124 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    expression_statement       go to state 200
    expression_opt             go to state 80


State 160

   67 expression: expression . ',' assignment_expression
  119 selection_statement: IF '(' expression . ')' M1 statement N1 ELSE M1 statement
  120                    | IF '(' expression . ')' M1 statement

    ')'  shift, and go to state 201
    ','  shift, and go to state 147


State 161

  127 jump_statement: RETURN expression ';' .

    $default  reduce using rule 127 (jump_statement)


State 162

   67 expression: expression . ',' assignment_expression
  121 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 202
    ','  shift, and go to state 147


State 163

  122 iteration_statement: WHILE M1 '(' . expression ')' M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 203
    id_var                     go to state 73


State 164

    6 primary_expression: '(' expression ')' .

    $default  reduce using rule 6 (primary_expression)


State 165

   80 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 80 (specifier_qualifier_list)


State 166

   22 cast_expression: '(' type_name ')' . cast_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression  go to state 54
    CONSTANT            go to state 55
    postfix_expression  go to state 56
    unary_expression    go to state 174
    cast_expression     go to state 204
    id_var              go to state 73


State 167

   15 postfix_expression: postfix_expression PTR_OP id_var .

    $default  reduce using rule 15 (postfix_expression)


State 168

   12 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 12 (postfix_expression)


State 169

   13 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   19 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 205
    ','  shift, and go to state 206


State 170

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 171

   11 postfix_expression: postfix_expression '[' expression . ']'
   67 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 207
    ','  shift, and go to state 147


State 172

   14 postfix_expression: postfix_expression '.' id_var .

    $default  reduce using rule 14 (postfix_expression)


State 173

   54 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 54 (assignment_expression)


State 174

   21 cast_expression: unary_expression .

    $default  reduce using rule 21 (cast_expression)


State 175

   24 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 24 (multiplicative_expression)


State 176

   25 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 25 (multiplicative_expression)


State 177

   26 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 178

   24 multiplicative_expression: multiplicative_expression . '*' cast_expression
   25                          | multiplicative_expression . '/' cast_expression
   26                          | multiplicative_expression . '%' cast_expression
   28 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 28 (additive_expression)


State 179

   24 multiplicative_expression: multiplicative_expression . '*' cast_expression
   25                          | multiplicative_expression . '/' cast_expression
   26                          | multiplicative_expression . '%' cast_expression
   29 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 128
    '/'  shift, and go to state 129
    '%'  shift, and go to state 130

    $default  reduce using rule 29 (additive_expression)


State 180

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   31 shift_expression: shift_expression LEFT_OP additive_expression .

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 31 (shift_expression)


State 181

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   32 shift_expression: shift_expression RIGHT_OP additive_expression .

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132

    $default  reduce using rule 32 (shift_expression)


State 182

   31 shift_expression: shift_expression . LEFT_OP additive_expression
   32                 | shift_expression . RIGHT_OP additive_expression
   36 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 133
    RIGHT_OP  shift, and go to state 134

    $default  reduce using rule 36 (relational_expression)


State 183

   31 shift_expression: shift_expression . LEFT_OP additive_expression
   32                 | shift_expression . RIGHT_OP additive_expression
   37 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 133
    RIGHT_OP  shift, and go to state 134

    $default  reduce using rule 37 (relational_expression)


State 184

   31 shift_expression: shift_expression . LEFT_OP additive_expression
   32                 | shift_expression . RIGHT_OP additive_expression
   34 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 133
    RIGHT_OP  shift, and go to state 134

    $default  reduce using rule 34 (relational_expression)


State 185

   31 shift_expression: shift_expression . LEFT_OP additive_expression
   32                 | shift_expression . RIGHT_OP additive_expression
   35 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 133
    RIGHT_OP  shift, and go to state 134

    $default  reduce using rule 35 (relational_expression)


State 186

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE_OP shift_expression
   37                      | relational_expression . GE_OP shift_expression
   39 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 39 (equality_expression)


State 187

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE_OP shift_expression
   37                      | relational_expression . GE_OP shift_expression
   40 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 135
    GE_OP  shift, and go to state 136
    '<'    shift, and go to state 137
    '>'    shift, and go to state 138

    $default  reduce using rule 40 (equality_expression)


State 188

   39 equality_expression: equality_expression . EQ_OP relational_expression
   40                    | equality_expression . NE_OP relational_expression
   42 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 139
    NE_OP  shift, and go to state 140

    $default  reduce using rule 42 (and_expression)


State 189

   42 and_expression: and_expression . '&' equality_expression
   44 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 141

    $default  reduce using rule 44 (exclusive_or_expression)


State 190

   44 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   46 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 142

    $default  reduce using rule 46 (inclusive_or_expression)


State 191

   48 logical_and_expression: logical_and_expression AND_OP M1 . inclusive_or_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 208
    id_var                     go to state 73


State 192

   50 logical_or_expression: logical_or_expression OR_OP M1 . logical_and_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 209
    id_var                     go to state 73


State 193

   52 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   67 expression: expression . ',' assignment_expression

    ','  shift, and go to state 147
    ':'  shift, and go to state 210


State 194

   67 expression: expression ',' assignment_expression .

    $default  reduce using rule 67 (expression)


State 195

  112 block_item_list: block_item_list M1 block_item .

    $default  reduce using rule 112 (block_item_list)


State 196

   96 parameter_list: parameter_list ',' declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 6
    '*'         shift, and go to state 7

    declarator         go to state 211
    direct_declarator  go to state 12
    pointer            go to state 13
    id_var             go to state 14


State 197

   98 identifier_list: identifier_list ',' id_var .

    $default  reduce using rule 98 (identifier_list)


State 198

  123 iteration_statement: DO M1 statement M1 . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 212


State 199

  125 iteration_statement: FOR '(' expression ';' . M1 expression ';' M1 expression N1 ')' M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 213


State 200

  124 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement

    ')'  shift, and go to state 214


State 201

  119 selection_statement: IF '(' expression ')' . M1 statement N1 ELSE M1 statement
  120                    | IF '(' expression ')' . M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 215


State 202

  121 selection_statement: SWITCH '(' expression ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 216
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 203

   67 expression: expression . ',' assignment_expression
  122 iteration_statement: WHILE M1 '(' expression . ')' M1 statement

    ')'  shift, and go to state 217
    ','  shift, and go to state 147


State 204

   22 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 22 (cast_expression)


State 205

   13 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 13 (postfix_expression)


State 206

   19 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 218
    id_var                     go to state 73


State 207

   11 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 11 (postfix_expression)


State 208

   46 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   48 logical_and_expression: logical_and_expression AND_OP M1 inclusive_or_expression .

    '|'  shift, and go to state 143

    $default  reduce using rule 48 (logical_and_expression)


State 209

   48 logical_and_expression: logical_and_expression . AND_OP M1 inclusive_or_expression
   50 logical_or_expression: logical_or_expression OR_OP M1 logical_and_expression .

    AND_OP  shift, and go to state 144

    $default  reduce using rule 50 (logical_or_expression)


State 210

   52 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 174
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 219
    id_var                     go to state 73


State 211

   96 parameter_list: parameter_list ',' declaration_specifiers declarator .

    $default  reduce using rule 96 (parameter_list)


State 212

  123 iteration_statement: DO M1 statement M1 WHILE . '(' expression ')' ';'

    '('  shift, and go to state 220


State 213

  125 iteration_statement: FOR '(' expression ';' M1 . expression ';' M1 expression N1 ')' M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 221
    id_var                     go to state 73


State 214

  124 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 222
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 215

  119 selection_statement: IF '(' expression ')' M1 . statement N1 ELSE M1 statement
  120                    | IF '(' expression ')' M1 . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 223
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 216

  121 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 121 (selection_statement)


State 217

  122 iteration_statement: WHILE M1 '(' expression ')' . M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 224


State 218

   19 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 219

   52 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 52 (conditional_expression)


State 220

  123 iteration_statement: DO M1 statement M1 WHILE '(' . expression ')' ';'

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 225
    id_var                     go to state 73


State 221

   67 expression: expression . ',' assignment_expression
  125 iteration_statement: FOR '(' expression ';' M1 expression . ';' M1 expression N1 ')' M1 statement

    ','  shift, and go to state 147
    ';'  shift, and go to state 226


State 222

  124 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 124 (iteration_statement)


State 223

  119 selection_statement: IF '(' expression ')' M1 statement . N1 ELSE M1 statement
  120                    | IF '(' expression ')' M1 statement .

    ELSE      reduce using rule 2 (N1)
    ELSE      [reduce using rule 120 (selection_statement)]
    $default  reduce using rule 120 (selection_statement)

    N1  go to state 227


State 224

  122 iteration_statement: WHILE M1 '(' expression ')' M1 . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 228
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 225

   67 expression: expression . ',' assignment_expression
  123 iteration_statement: DO M1 statement M1 WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 229
    ','  shift, and go to state 147


State 226

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' . M1 expression N1 ')' M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 230


State 227

  119 selection_statement: IF '(' expression ')' M1 statement N1 . ELSE M1 statement

    ELSE  shift, and go to state 231


State 228

  122 iteration_statement: WHILE M1 '(' expression ')' M1 statement .

    $default  reduce using rule 122 (iteration_statement)


State 229

  123 iteration_statement: DO M1 statement M1 WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 232


State 230

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 . expression N1 ')' M1 statement

    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 233
    id_var                     go to state 73


State 231

  119 selection_statement: IF '(' expression ')' M1 statement N1 ELSE . M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 234


State 232

  123 iteration_statement: DO M1 statement M1 WHILE '(' expression ')' ';' .

    $default  reduce using rule 123 (iteration_statement)


State 233

   67 expression: expression . ',' assignment_expression
  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 expression . N1 ')' M1 statement

    ','  shift, and go to state 147

    $default  reduce using rule 2 (N1)

    N1  go to state 235


State 234

  119 selection_statement: IF '(' expression ')' M1 statement N1 ELSE M1 . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 236
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 235

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 expression N1 . ')' M1 statement

    ')'  shift, and go to state 237


State 236

  119 selection_statement: IF '(' expression ')' M1 statement N1 ELSE M1 statement .

    $default  reduce using rule 119 (selection_statement)


State 237

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 expression N1 ')' . M1 statement

    $default  reduce using rule 1 (M1)

    M1  go to state 238


State 238

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 expression N1 ')' M1 . statement

    DO                  shift, and go to state 41
    FOR                 shift, and go to state 42
    IF                  shift, and go to state 43
    RETURN              shift, and go to state 44
    SWITCH              shift, and go to state 45
    WHILE               shift, and go to state 46
    IDENTIFIER          shift, and go to state 5
    INTEGER_CONSTANT    shift, and go to state 47
    FLOATING_CONSTANT   shift, and go to state 48
    CHARACTER_CONSTANT  shift, and go to state 49
    STRING_LITERAL      shift, and go to state 50
    '('                 shift, and go to state 51
    ';'                 shift, and go to state 52
    '{'                 shift, and go to state 25

    ';'  [reduce using rule 118 (expression_opt)]

    primary_expression         go to state 54
    CONSTANT                   go to state 55
    postfix_expression         go to state 56
    unary_expression           go to state 57
    cast_expression            go to state 58
    multiplicative_expression  go to state 59
    additive_expression        go to state 60
    shift_expression           go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    and_expression             go to state 64
    exclusive_or_expression    go to state 65
    inclusive_or_expression    go to state 66
    logical_and_expression     go to state 67
    logical_or_expression      go to state 68
    conditional_expression     go to state 69
    assignment_expression      go to state 70
    expression                 go to state 71
    id_var                     go to state 73
    statement                  go to state 239
    compound_statement         go to state 75
    expression_statement       go to state 79
    expression_opt             go to state 80
    selection_statement        go to state 81
    iteration_statement        go to state 82
    jump_statement             go to state 83


State 239

  125 iteration_statement: FOR '(' expression ';' M1 expression ';' M1 expression N1 ')' M1 statement .

    $default  reduce using rule 125 (iteration_statement)
